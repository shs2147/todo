package com.todoList.demo.exception;import org.springframework.core.Ordered;import org.springframework.core.annotation.Order;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.MethodArgumentNotValidException;import org.springframework.web.bind.annotation.ResponseStatus;import org.springframework.web.bind.annotation.RestControllerAdvice;import java.util.HashMap;import java.util.Map;@RestControllerAdvice@Order(Ordered.HIGHEST_PRECEDENCE)public class ExceptionHandler {    @ResponseStatus(HttpStatus.BAD_REQUEST)    @org.springframework.web.bind.annotation.ExceptionHandler(MethodArgumentNotValidException.class)    public Map<String, String> handleInvalidArgument(MethodArgumentNotValidException e) {        Map<String, String> errorMap = new HashMap<>();        e.getBindingResult().getFieldErrors().forEach(error -> {            errorMap.put(error.getField(), error.getDefaultMessage());        });        return errorMap;    }    @org.springframework.web.bind.annotation.ExceptionHandler(value = CustomException.class)    public final ResponseEntity<Response> handleCustomException(CustomException customException){        Response response=new Response(                customException.getMessage(),                HttpStatus.ALREADY_REPORTED.value()        );        return ResponseEntity.status(HttpStatus.ALREADY_REPORTED).body(response);    }}