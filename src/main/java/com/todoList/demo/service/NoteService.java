package com.todoList.demo.service;import com.todoList.demo.entity.Employee;import com.todoList.demo.entity.Note;import com.todoList.demo.repository.NoteRepository;import com.todoList.demo.repository.UserRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.scheduling.annotation.Scheduled;import org.springframework.stereotype.Service;import javax.persistence.EntityManager;import javax.persistence.PersistenceContext;import java.time.LocalDateTime;import java.util.ArrayList;import java.util.List;@Servicepublic class NoteService {    @Autowired    NoteRepository noteRepository;    @Autowired    UserRepository userRepository;    public Note createNote(Note note) {        // Get the currently logged-in user//        Employee currentUser = (Employee) SecurityContextHolder.getContext().getAuthentication().getPrincipal();       Employee employee=userRepository.findById(note.getEmployeeId()).orElse(null);        note.setUser(employee);        LocalDateTime currentDateTime = LocalDateTime.now();        note.setCreatedDate(currentDateTime);        return noteRepository.save(note);    }    @PersistenceContext    private EntityManager entityManager;    public List getMostRecentNotes() {        String sqlQuery = "SELECT * FROM Note n ORDER BY n.created_Date DESC LIMIT 10";        return entityManager.createNativeQuery(sqlQuery, Note.class).getResultList();    }    public Object delete(Long id){        noteRepository.deleteById(id);        return null;    }    @Scheduled(fixedRate = 3600000)    public Object deleteRecords() {            List<Note> mostRecentNotes = getMostRecentNotes();            List<Long> noteIdsToDelete = new ArrayList<>();            for (Note note : mostRecentNotes) {                noteIdsToDelete.add(note.getId());            }            List<Note> notesToDelete = noteRepository.findAllByIdNotIn(noteIdsToDelete);            noteRepository.deleteAll(notesToDelete);        return null;    }    }